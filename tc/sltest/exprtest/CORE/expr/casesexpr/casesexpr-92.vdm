module CasesExprTest
exports all
definitions

	functions

  f : () -> inmap rat to nat
  f() ==
    {2 |-> 5}
  pre true
--  post true

types

  A :: a: int
       b: bool

values

  v1 : A = mk_A(1,true);
  n : real = 88



------------------------------ Actual Test data ------------------------------
operations

Test: () ==> ()
Test() ==
  let t = true,
      nill = nil,
      - = let m:char|bool =
        cases n:
         1
	   -> t
	,
         6
           -> not k
        ,
         8
           -> +7
        ,
         9
           -> -9
        ,
         10
           -> abs -7
        ,
         11
           -> floor 10.8
	,
         others -> nill
        end
        in m 
  in skip;

------------------------------------------------------------------------------
end CasesExprTest
