module SeqModifyMapOverrideExprTest
exports all
definitions

	types

  MyType :: nt : bool;

   Name ::
    a: seq of char
    b: [nat];
    
 MyMap = map Name to MyType  

 functions
  h: Name -> Name
  h(nm) ==
   nm
 


------------------------------ Actual Test data ------------------------------
operations

Test: () ==> ()
Test() ==
  let - = (if true
         then [1,8,6]
         else [true,false])++{1 |-> 2}
  in skip;

------------------------------------------------------------------------------
end SeqModifyMapOverrideExprTest